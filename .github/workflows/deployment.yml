name: Deployment pipeline

on:
  push:
    branches:
    - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  APPID: ${{ secrets.APPID }}
  GUILDID: ${{ secrets.GUILDID }}
  DISCORDTOKEN: ${{ secrets.DISCORDTOKEN }}
  WEATHERTOKEN: ${{ secrets.WEATHERTOKEN }}
  PUBLICKEY: ${{ secrets.PUBLICKEY }}
  PORT: ${{ secrets.PORT }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  lint_and_test:
    name: Lint and test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
      - name: npm install
        run: npm install
      - name: lint
        run: npm run lint
      - name: test
        run: npm run test:deployment
        env:
          NODE_ENV: test

  update_commands:
    if: ${{ github.event_name == 'push' }}  
    needs: lint_and_test
    name: Update commands
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup node
        uses: actions/setup-node@v3
      - name: npm install
        run: npm install
      - name: 'Update commands'
        run: 'npm run update:commands'
        env:
          NODE_ENV: production


  bump_version:
    if: ${{ github.event_name == 'push' }} 
    needs: lint_and_test
    name: Bump version and push tag
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3        
    - name: Bump version and push tag
      uses: anothrNick/github-tag-action@1.36.0
      env: 
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        NONE_STRING_TOKEN: '#skip'


  deployment:
    if: ${{ github.event_name == 'push' }}
    needs: [lint_and_test, update_commands]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - uses: superfly/flyctl-actions/setup-flyctl@master
      - name: Deploy to fly.io
        run: flyctl deploy --remote-only -e APPID=${{ secrets.APPID }} -e DISCORDTOKEN=${{ secrets.DISCORDTOKEN }} -e WEATHERTOKEN=${{ secrets.WEATHERTOKEN }} -e PUBLICKEY=${{ secrets.PUBLICKEY }} -e MONGODB_URI=${{ secrets.MONGODB_URI }} -e PORT=8080

  notify_webhook:
    if: 
    name: Send discord notification
    needs: lint_and_test
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Success
        if: success()
        uses: rjstone/discord-webhook-notify@v1
        with:
            severity: info
            details: ${{ github.event_name }} succeeded!
            webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
