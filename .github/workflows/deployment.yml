name: Deployment pipeline

on:
  push:
    branches:
    - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

env:
  APPID: ${{ secrets.APPID }}
  GUILDID: ${{ secrets.GUILDID }}
  DISCORDTOKEN: ${{ secrets.DISCORDTOKEN }}
  WEATHERTOKEN: ${{ secrets.WEATHERTOKEN }}
  PUBLICKEY: ${{ secrets.PUBLICKEY }}
  PORT: ${{ secrets.PORT }}
  MONGODB_URI: ${{ secrets.MONGODB_URI }}
  TEST_MONGODB_URI: ${{ secrets.TEST_MONGODB_URI }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

jobs:
  deployment_pipeline:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - if: ${{ github.event_name == 'push' }}
        uses: superfly/flyctl-actions/setup-flyctl@master
      - if: ${{ github.event_name == 'push' }}
        name: Deploy to fly.io
        run: flyctl deploy --remote-only -e APPID=${{ secrets.APPID }} GUILDID=${{ secrets.GUILDID }} DISCORDTOKEN=${{ secrets.DISCORDTOKEN }} WEATHERTOKEN=${{ secrets.DISCORDTOKEN }} PUBLICKEY=${{ secrets.PUBLICKEY }} MONGODB_URI=${{ secrets.MONGODB_URI }}
      - name: npm install
        run: npm install
      - name: lint
        run: npm run lint
      - name: test
        run: npm run test:deployment
        env:
          NODE_ENV: test
      - if: ${{ github.event_name == 'push' }}          
        name: uninstall commands
        run: npm run reset
        env:
          NODE_ENV: production
      - if: ${{ github.event_name == 'push' }}       
        name: install commands
        run: npm run install:commands
        env:
          NODE_ENV: production
